/*! RubberDuck - v0.12.22 - 2013-11-06 */define(function(){"use strict";var RubberDuck={};return RubberDuck.app=function(options){$.extend(this,$.Deferred(),options||{});var self=this;return"undefined"==typeof self.loadLibraries&&(self.loadLibraries=!1),requirejs.config($.extend({},{baseUrl:"undefined"!=typeof self.path?self.path:"app/"},self.loadLibraries?self.getLibraries():{})),self.requireLibraries().done(function(){self.loadApplication()}).fail(function(error){return self.reject(self,error)}),this},RubberDuck.app.prototype.cache={},RubberDuck.app.prototype.getLibraries=function(){var self=this;return self.loadLibraries?$.extend({},{paths:{"jquery.routes":"lib/jquery.routes","jquery.model":"lib/jquery.model.min",handlebars:"lib/handlebars"},shim:{"jquery.routes":{exports:"jQuery.fn.routes"},handlebars:{exports:"Handlebars"},model:{exports:"jQuery.fn.Model"}}}):{}},RubberDuck.app.prototype.requireLibraries=function(){var self=this;return $.Deferred(function(deferred){return self.loadLibraries?(require(["jquery.model","jquery.routes","handlebars"],function(models,routes,handlebars){return deferred.resolve(models,routes,handlebars)},function(e){return deferred.reject(e.message)}),void 0):deferred.resolve()}).promise()},RubberDuck.app.prototype.loadApplication=function(){var self=this,w=$.when(this.loadControllers(),this.loadModels());w.done(function(controllers,models){return self.resolve(self,controllers,models)}),w.fail(function(e){return self.reject(self,e)})},RubberDuck.app.prototype.loadModels=function(){var self=this;return self.hasModels()?$.Deferred(function(deferred){self.loadedModels={},$.each(self.models,function(i,model){self.loadModel(model).done(function(model){return self.loadedModels[model.name]=model,i===self.models.length-1?deferred.resolve(self.loadedModels):void 0}).fail(function(e){return deferred.reject(e)})})}):void 0},RubberDuck.app.prototype.loadControllers=function(){var self=this;return self.hasControllers()?$.Deferred(function(deferred){self.loadedControllers={},$.each(self.controllers,function(i,controller){self.loadController(controller).done(function(controller){return self.loadedControllers[controller.name]=controller,i===self.controllers.length-1?deferred.resolve():void 0}).fail(function(e){return deferred.reject(e)})})}):void 0},RubberDuck.app.prototype.isLoaded=function(){return"undefined"!=typeof this.loadedControllers&&Object.keys(this.loadedControllers).length>0},RubberDuck.app.prototype.run=function(){return this.isLoaded()?($.each(this.loadedControllers,function(i,controller){$.isFunction(controller.init)&&controller.init(),controller.hasViews()&&$.each(controller.loaded,function(i,view){$.isFunction(view.init)&&view.init()}),controller.hasRoutes()&&controller.loadRoutes()}),$.routes.load(location.hash),void 0):console.warn("Cuuuuek, Load the application before invoke run method")},RubberDuck.app.prototype.hasControllers=function(){return"undefined"!=typeof this.controllers&&this.controllers.length>0},RubberDuck.app.prototype.hasModels=function(){return"undefined"!=typeof this.models&&this.models.length>0},RubberDuck.app.prototype.getController=function(name){return this.loadedController[name]},RubberDuck.app.prototype.loadController=function(controller){var self=this;return $.Deferred(function(deferred){require(["controllers/"+controller],function(c){controller=$.extend(c,new RubberDuck.app.controller(self)),$.each(controller.views,function(i,view){controller.loadedViews={},controller.loadView(view).done(function(view){return controller.loadedViews[controller.views[i]]=view,i===controller.views.length-1?deferred.resolve(controller):void 0})})},function(e){return deferred.reject(e.message)})}).promise()},RubberDuck.app.prototype.getModel=function(name){return this.loadedModels[name]},RubberDuck.app.prototype.loadModel=function(model){var self=this;return $.Deferred(function(deferred){require(["models/"+model],function(m){return model=$.extend(m,new RubberDuck.app.model(self)),self.loadedModels[m.name]=$.Model.extend(model.name,model),deferred.resolve(self.loadedModels[m.name])},function(e){return deferred.reject(e.message)})}).promise()},RubberDuck.app.model=function(app){return this.app=app,this},RubberDuck.app.controller=function(app){return this.app=app,this},RubberDuck.app.controller.prototype.loadView=function(viewName){var self=this;return $.Deferred(function(deferred){require(["views/"+viewName],function(v){deferred.resolve($.extend(v,new RubberDuck.app.view(self)))})}).promise()},RubberDuck.app.controller.prototype.getView=function(name){return this.loadedViews[name]},RubberDuck.app.controller.prototype.hasRoutes=function(){var self=this,routes=self.routes();return"undefined"!=typeof routes&&Object.keys(routes).length>0},RubberDuck.app.controller.prototype.hasViews=function(){return"undefined"!=typeof this.loadedViews&&this.loadedViews.length>0},RubberDuck.app.controller.prototype.loadRoutes=function(){var self=this,routes=self.routes();Object.keys(routes).forEach(function(r){$.routes.add(r,routes[r],self)})},RubberDuck.app.view=function(controller,options){return $.extend(this,options||{}),this.controller=controller,this},RubberDuck.app.view.prototype.cache={},RubberDuck.app.template=function(view,data){return"undefined"!=typeof view&&(this.view=view),"undefined"!=typeof data&&(this._data=data,this.tpl=Handlebars.compile(this._data)),this},RubberDuck.app.template.prototype.load=function(name){var self=this,templatePath="";return self.defaultTemplatePath="views/templates",$.Deferred(function(deferred){"undefined"==typeof self.view?templatePath=self.defaultTemplatePath:"undefined"!=typeof self.view.templatePath?templatePath=self.view.templatePath:"undefined"!=typeof self.view.controller.app.path?templatePath=self.view.controller.app.path+"views/templates":(console.warn("Not defined template path, using default location %s",self.defaultTemplatePath),templatePath=self.defaultTemplatePath),templatePath=templatePath+"/"+name+".html",self.view.cache.hasOwnProperty(templatePath)?(console.debug("Loading template from cache: "+templatePath),self.tpl=self.view.cache[templatePath],deferred.resolve(self)):(console.debug("Loading template from url: "+templatePath),$.get(templatePath).done(function(data){self.view.cache[templatePath]=Handlebars.compile(data),self.tpl=self.view.cache[templatePath],deferred.resolve(self)}))}).promise()},RubberDuck.app.template.prototype.render=function(data){var rendered=this.tpl(data);return"undefined"!=typeof this.view&&"undefined"!=typeof this.view.el?$(this.view.el).html(rendered):rendered},RubberDuck});